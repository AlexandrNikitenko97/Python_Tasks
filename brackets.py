"""
 Дано выражение с цифрами, скобками и операторами. В данной задаче важны только скобки. Скобки представлены в трех вариациях: "{}" "()" и "[]". Скобки используются, чтобы определить порядок применения операторов или ограничить участок выражения. Если скобка открывается, то она должна закрываться скобкой того же типа. Участки ограниченные одной парой скобок, не должны пересекаться с участками других скобок. В этой задаче, вам необходимо определить правильное ли выражение или нет, основываясь на расположении скобок. И не обращайте внимание на операторы и операнды.

Входные данные: Выражение для проверки, как строка (str, unicode).

Выходные данные: Решение, правильное выражение или нет, как булево значение (True или False).

Примеры:

check_brackets("((5+3)*2+1)") == True

check_brackets("{[(3+1)+2]+}") == True

check_brackets("(3+{1-1)}") == False

check_brackets("[1+1]+(2*2)-{3/3}") == True

check_brackets("(({[(((1)-2)+3)-3]/3}-3)") == False

check_brackets("2+3") == True

"""


def check_brackets(expression):
    pairs = []
    brackets = {
        ')': '(',
        ']': '[',
        '}': '{'
    }
    for i in expression:
        if i in brackets.values():
            pairs.append(i)
        elif i in brackets:
            try:
                if pairs.pop() is not brackets[i]:
                    return False
            except IndexError:
                return False
    if pairs:
        return False
    return True
